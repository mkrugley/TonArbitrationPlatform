"""
Keyboards
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è Telegram –±–æ—Ç–∞
"""

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


# ========================================
# –ì–õ–ê–í–ù–´–ï –ú–ï–ù–Æ
# ========================================

def get_main_menu() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    kb = ReplyKeyboardBuilder()
    kb.button(text="üÜï –°–æ–∑–¥–∞—Ç—å —Å–ø–æ—Ä")
    kb.button(text="üìã –ú–æ–∏ —Å–ø–æ—Ä—ã")
    kb.button(text="‚öñÔ∏è –°—Ç–∞—Ç—å –∞—Ä–±–∏—Ç—Ä–æ–º")
    kb.button(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    kb.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    kb.button(text="‚ùì –ü–æ–º–æ—â—å")
    kb.adjust(2, 2, 2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É
    return kb.as_markup(resize_keyboard=True)


def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    kb = ReplyKeyboardBuilder()
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∞")
    return kb.as_markup(resize_keyboard=True)


# ========================================
# –ö–ê–¢–ï–ì–û–†–ò–ò –°–ü–û–†–û–í
# ========================================

def get_dispute_categories() -> InlineKeyboardMarkup:
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–ø–æ—Ä–æ–≤"""
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="üõí –ü–æ–∫—É–ø–∫–∞-–ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤",
        callback_data="category:goods_sale"
    )
    kb.button(
        text="üíº –§—Ä–∏–ª–∞–Ω—Å –∏ —É—Å–ª—É–≥–∏",
        callback_data="category:freelance"
    )
    kb.button(
        text="üè† –ê—Ä–µ–Ω–¥–∞",
        callback_data="category:rental"
    )
    kb.button(
        text="üîß –£—Å–ª—É–≥–∏ –∏ —Ä–∞–±–æ—Ç—ã",
        callback_data="category:services"
    )
    kb.button(
        text="üí∞ –î–æ–ª–≥",
        callback_data="category:loan"
    )
    kb.button(
        text="ü§ù –°–æ–≤–º–µ—Å—Ç–Ω–∞—è –ø–æ–∫—É–ø–∫–∞",
        callback_data="category:shared_purchase"
    )
    kb.button(
        text="üì¶ –î—Ä—É–≥–æ–µ",
        callback_data="category:other"
    )
    
    kb.adjust(1)  # –ü–æ 1 –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return kb.as_markup()


# ========================================
# –î–ï–ô–°–¢–í–ò–Ø –°–û –°–ü–û–†–û–ú
# ========================================

def get_dispute_actions(
    dispute_id: int,
    user_role: str,
    status: str
) -> InlineKeyboardMarkup:
    """
    –î–µ–π—Å—Ç–≤–∏—è —Å–æ —Å–ø–æ—Ä–æ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        dispute_id: ID —Å–ø–æ—Ä–∞
        user_role: 'initiator', 'respondent', 'arbiter'
        status: –°—Ç–∞—Ç—É—Å —Å–ø–æ—Ä–∞
    """
    kb = InlineKeyboardBuilder()
    
    if user_role == "initiator":
        kb.button(
            text="üìé –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
            callback_data=f"add_evidence:{dispute_id}"
        )
        if status == "created":
            kb.button(
                text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –æ—Ç–≤–µ—Ç—á–∏–∫–∞",
                callback_data=f"invite_respondent:{dispute_id}"
            )
        kb.button(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–ø–æ—Ä",
            callback_data=f"cancel_dispute:{dispute_id}"
        )
    
    elif user_role == "respondent":
        kb.button(
            text="üìé –î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
            callback_data=f"add_evidence:{dispute_id}"
        )
        if status == "awaiting_invite":
            kb.button(
                text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ",
                callback_data=f"accept_dispute:{dispute_id}"
            )
            kb.button(
                text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                callback_data=f"reject_dispute:{dispute_id}"
            )
    
    elif user_role == "arbiter":
        kb.button(
            text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–ª–æ",
            callback_data=f"view_case:{dispute_id}"
        )
        kb.button(
            text="‚öñÔ∏è –í—ã–Ω–µ—Å—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ",
            callback_data=f"make_decision:{dispute_id}"
        )
    
    kb.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_disputes")
    kb.adjust(1)
    return kb.as_markup()


# ========================================
# –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ê–†–ë–ò–¢–†–û–í
# ========================================

def get_arbiter_specializations() -> InlineKeyboardMarkup:
    """–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∞—Ä–±–∏—Ç—Ä–æ–≤"""
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="üì± –¢–æ–≤–∞—Ä—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞",
        callback_data="spec:goods_electronics"
    )
    kb.button(
        text="üíª –§—Ä–∏–ª–∞–Ω—Å –∏ IT",
        callback_data="spec:freelance_it"
    )
    kb.button(
        text="üè° –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏ –∞—Ä–µ–Ω–¥–∞",
        callback_data="spec:real_estate"
    )
    kb.button(
        text="üé® –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏",
        callback_data="spec:creative"
    )
    kb.button(
        text="‚öñÔ∏è –û–±—â–∏–µ —Å–ø–æ—Ä—ã",
        callback_data="spec:general"
    )
    
    kb.adjust(1)
    return kb.as_markup()


# ========================================
# –í–´–ë–û–† –ê–†–ë–ò–¢–†–ê
# ========================================

def get_arbiter_list(
    arbiters: list,
    dispute_id: int
) -> InlineKeyboardMarkup:
    """
    –°–ø–∏—Å–æ–∫ –∞—Ä–±–∏—Ç—Ä–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
    
    Args:
        arbiters: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–±–∏—Ç—Ä–æ–≤
        dispute_id: ID —Å–ø–æ—Ä–∞
    """
    kb = InlineKeyboardBuilder()
    
    for arbiter in arbiters:
        rating_stars = "‚≠ê" * int(arbiter.get('rating', 0))
        full_name = arbiter.get('full_name', '–ê—Ä–±–∏—Ç—Ä')
        cases = arbiter.get('cases_resolved', 0)
        
        text = f"{full_name} {rating_stars} ({cases} –¥–µ–ª)"
        
        kb.button(
            text=text,
            callback_data=f"select_arbiter:{dispute_id}:{arbiter['user_id']}"
        )
    
    kb.button(
        text="üé≤ –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä",
        callback_data=f"random_arbiter:{dispute_id}"
    )
    
    kb.adjust(1)
    return kb.as_markup()


# ========================================
# –†–ï–®–ï–ù–ò–ï –ê–†–ë–ò–¢–†–ê
# ========================================

def get_decision_keyboard(dispute_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤"""
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="100% –∏—Å—Ç—Ü—É",
        callback_data=f"decision:{dispute_id}:100"
    )
    kb.button(
        text="75% –∏—Å—Ç—Ü—É / 25% –æ—Ç–≤–µ—Ç—á–∏–∫—É",
        callback_data=f"decision:{dispute_id}:75"
    )
    kb.button(
        text="50% / 50%",
        callback_data=f"decision:{dispute_id}:50"
    )
    kb.button(
        text="25% –∏—Å—Ç—Ü—É / 75% –æ—Ç–≤–µ—Ç—á–∏–∫—É",
        callback_data=f"decision:{dispute_id}:25"
    )
    kb.button(
        text="100% –æ—Ç–≤–µ—Ç—á–∏–∫—É",
        callback_data=f"decision:{dispute_id}:0"
    )
    kb.button(
        text="‚úçÔ∏è –°–≤–æ—è –ø—Ä–æ–ø–æ—Ä—Ü–∏—è",
        callback_data=f"decision:{dispute_id}:custom"
    )
    
    kb.adjust(2, 2, 1, 1)
    return kb.as_markup()


# ========================================
# –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï
# ========================================

def get_confirm_keyboard(action: str, data: str = "") -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    
    Args:
        action: –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
        data: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    """
    kb = InlineKeyboardBuilder()
    
    kb.button(
        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
        callback_data=f"confirm:{action}:{data}"
    )
    kb.button(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data=f"cancel:{action}:{data}"
    )
    
    kb.adjust(2)
    return kb.as_markup()


# ========================================
# –ü–ê–ì–ò–ù–ê–¶–ò–Ø
# ========================================

def get_pagination_keyboard(
    current_page: int,
    total_pages: int,
    callback_prefix: str
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    
    Args:
        current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (—Å 1)
        total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        callback_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data
    """
    kb = InlineKeyboardBuilder()
    
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if current_page > 1:
        buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"{callback_prefix}:page:{current_page - 1}"
            )
        )
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    buttons.append(
        InlineKeyboardButton(
            text=f"üìÑ {current_page}/{total_pages}",
            callback_data="noop"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä—ë–¥"
    if current_page < total_pages:
        buttons.append(
            InlineKeyboardButton(
                text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è",
                callback_data=f"{callback_prefix}:page:{current_page + 1}"
            )
        )
    
    kb.row(*buttons)
    return kb.as_markup()


# ========================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# ========================================

def get_back_button(callback_data: str = "back") -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" """
    kb = InlineKeyboardBuilder()
    kb.button(text="üîô –ù–∞–∑–∞–¥", callback_data=callback_data)
    return kb.as_markup()


def get_help_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–æ—â–∏ —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏"""
    kb = InlineKeyboardBuilder()
    
    kb.button(text="üìñ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–ø–æ—Ä", callback_data="help:create_dispute")
    kb.button(text="‚öñÔ∏è –ö–∞–∫ —Å—Ç–∞—Ç—å –∞—Ä–±–∏—Ç—Ä–æ–º", callback_data="help:become_arbiter")
    kb.button(text="üí∞ –¢–∞—Ä–∏—Ñ—ã –∏ –∫–æ–º–∏—Å—Å–∏–∏", callback_data="help:fees")
    kb.button(text="üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", callback_data="help:security")
    kb.button(text="‚ùì FAQ", callback_data="help:faq")
    kb.button(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help:support")
    
    kb.adjust(2)
    return kb.as_markup()
